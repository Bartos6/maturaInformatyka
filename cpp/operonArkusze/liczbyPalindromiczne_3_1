#include <iostream>
using namespace std;
//Repetytorium Operon
//Arkusz1 3.2

bool czyPalindromStr(int n);
bool czyPalindromInt(int n);
bool czyPalindrom(int n);

int suma() {
    int suma = 0, x;
  
    for (int i = 1; i < 10; i++) {
        //1 cyfra
        if (i % 2 != 0) if (czyPalindrom(i)) suma += i;
        //2 cyfry
        x = 10 * i + i;
        if (x % 2 != 0) if (czyPalindrom(x)) suma += x;

        for (int j = 0; j < 10; j++) {
            //3 cyfry
            x = 100 * i + 10 * j + 1 * i;
            if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
            //4 cyfry
            x = 1000 * i + 100 * j + 10 * j + 1 * i;
            if (x % 2 != 0) if (czyPalindrom(x)) suma += x;

            for (int k = 0; k < 10; k++) {
                //5 cyfry
                x = 10000 * i + 1000 * j + 100 * k + 10 * j + 1 * i;
                if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
                //6 cyfry
                x = 100000 * i + 10000 * j + 1000 * k + 100 * k + 10 * j + 1 * i;
                if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
            }
        }
    }

    return suma;
}

int main()
{
    cout << "Suma z funkcji: " << suma();

    int suma = 0, x;
   
    //cyfry
    for (int i = 0; i < 10; i++) {
        if (i % 2 != 0) if (czyPalindrom(i)) suma += i;
    }    
    
    //2cyfry
    for (int i = 11; i < 100; i += 11) {
        if (i % 2 != 0) if (czyPalindrom(i)) suma += i;
    }

    //3cyfr    
    for (int i = 1; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            x = 100 * i + 10 * j + 1 * i;
            if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
        }
    }    

    //4cyfr
    for (int i = 1; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            x = 1000 * i + 100 * j + 10 * j + 1 * i;
            if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
        }
    }
    
    //5cyfr
    for (int i = 1; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            for (int k = 0; k < 10; k++) {
                x = 10000 * i + 1000 * j + 100 * k + 10 * j + 1 * i;            
                if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
            }
        }
    }

    //6cyfr
    for (int i = 1; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            for (int k = 0; k < 10; k++) {
                x = 100000 * i + 10000 * j + 1000 * k + 100 * k + 10 * j + 1 * i;
                if (x % 2 != 0) if (czyPalindrom(x)) suma += x;
            }
        }
    }
    
    cout << "\nSuma: " << suma;
    
    return 0;
}


bool czyPalindrom(int n) {
    int  dzies = n, pot_dzies = 1, x, size = 0;
    string bin = "", odwrotna_bin = "";

    while (dzies > 0) {
        x = pot_dzies * (dzies % 2);

        if (x == 0) bin += '0';
        else bin += '1';

        dzies = dzies / 2;
        pot_dzies *= 10;
        size++;
    }

    for (int i = size - 1; i >= 0; i--) {
        odwrotna_bin += bin[i];
    }

    if (bin == odwrotna_bin) return true;
    else return false;
}

bool czyPalindromStr(int n) {
    long long  dzies = n, pot_dzies = 1, x, size = 0;
    string bin = "", odwrotna_bin = "";

    while (dzies > 0) {
        x = pot_dzies * (dzies % 2);

        if (x == 0) bin += '0';
        else bin += '1';

        dzies = dzies / 2;
        pot_dzies *= 10;
        size++;
    }

    for (int i = size - 1; i >= 0; i--) {
        odwrotna_bin += bin[i];

    }
    cout << "\n\n\nliczba: " << n;
    cout << "\nbin: " << bin;
    cout << "\nodwrBin: " << odwrotna_bin;
    cout << "\n";


    if (bin == odwrotna_bin) {
        cout << "TAK";
        return true;
    }
    else {
        cout << "NIE ";
        return false;
    }
}

bool czyPalindromInt(int n) {

    long long  dzies = n, pot_dzies = 1, odwrotna_bin = 0, x, bin = 0;

    while (dzies > 0) {
        bin += pot_dzies * (dzies % 2);

        dzies = dzies / 2;
        pot_dzies *= 10;

    }

    //odwrocic zmienna bin i przypisac do odwrotna_bin
    x = bin;

    while (x > 0) {
        odwrotna_bin = 10 * odwrotna_bin + x % 10;

        x /= 10;
    }

    cout << "\n\n\nliczba: " << n;
    cout << "\nbin: " << bin;
    cout << "\nodwrBin: " << odwrotna_bin;
    cout << "\n";

    //sprawdzic czy bin i odwrotna_bin to to samo 
    //jeÅ›li tak to palindormiczna

    //if (bin == odwrotna_bin) return true;
    //else return false;

    if (bin == odwrotna_bin) {
        cout << "TAK";
        return true;
    }
    else {
        cout << "NIE ";
        return false;
    }

}
