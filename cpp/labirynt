#include <iostream>
using namespace std;

const int n = 10;
int jeden = 1;

void wypelnijLabirynt(int tab[n][n]);
void wypiszLabirynt(int tab[n][n]);

bool droga(int tab[n][n], int w, int k) {

	tab[w][k]=2;

	if(w == 0 || w == n - 1 || k == 0 || k == n - 1) return true;
	//lewo
	if (tab[w][k - 1] == 0  && droga(tab, w, k - 1)) return true;
	//gora
	if (tab[w - 1][k] == 0 && droga(tab, w - 1, k)) return true;
	//prawo
	if (tab[w][k + 1] == 0 && droga(tab, w, k + 1))	return true;
	//dol
	if (tab[w + 1][k] == 0 && droga(tab, w + 1, k)) return true;
	
	return false;


}


int main() {
	int tab[n][n];
	wypelnijLabirynt(tab);
	cout << endl << endl << "Czy droga: " << droga(tab, n - 2, 1) << endl;
	wypiszLabirynt(tab);



}


void wypelnijLabirynt(int tab[n][n]) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (i == 0 || i == n - 1) {
				if (j == 1) tab[i][j] = 0;
				else tab[i][j] = jeden;
			}
			else if (j == 0 || j == n - 1) {
				tab[i][j] = jeden;
			}
			else if (i % 3 != 0) {
				if (j % 2 == 0) tab[i][j] = jeden;
				else tab[i][j] = 0;
			}
			else {

				tab[i][j] = 0;
			}
		}
	}
	tab[4][1] = jeden;
	tab[4][3] = jeden;
	tab[5][1] = jeden;
	tab[5][7] = jeden;
	tab[9][1] = jeden;
}

void wypiszLabirynt(int tab[n][n]) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (tab[i][j] == 0) {
				cout << "  ";
			}else
			cout << tab[i][j] << " ";
		}
		cout << endl;
	}
}
